security:
    enable_authenticator_manager: true

    encoders:
        App\Syllabus\Entity\User:
            algorithm: bcrypt
            cost: 12

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        main:
            id: '%provider%'
        user_db:
            entity: { class: App\Syllabus\Entity\User, property: username }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            lazy: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                provider:                 user_db

        api:
            pattern: ^/api/(?!docs.+/?)
            stateless: true
            guard:
                provider: user_db
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            pattern: ^/
            lazy: true
            provider: main
            switch_user: false
            logout:
                path: /logout
            custom_authenticators:
                - '%authenticator%'

    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_ALLOWED_TO_SWITCH
        ROLE_API:
            - ROLE_API_GET_YEARS
            - ROLE_API_GET_YEAR
            - ROLE_API_POST_YEAR
            - ROLE_API_PUT_YEAR

    access_control:
        - { path: light(\/.*)?$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /maintenance$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api(/docs)?$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/, roles: ROLE_API }
        - { path: "^/[^/]{1,5}/admin/settings", role: ROLE_SUPER_ADMIN }
        - { path: "^/[^/]{1,5}/admin", role: ROLE_ADMIN }
        - { path: ^/, role: ROLE_USER }
