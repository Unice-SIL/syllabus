{% extends 'ajax.html.twig' %}

{% block main %}

    <h3>
        Matériel et ressources
    </h3>

    {% form_theme form with [
        'form/equipments_field.html.twig',
        'form/choices_equipments_field.html.twig'
    ] %}

    {{ form_start(form) }}

    <div class="row m-1">
        <div class="col border mr-1">
            <h5 class="mt-1 mb-1">
                Matériel nécessaire
            </h5>
            {{ form_widget(form.listEquipments) }}
        </div>
        <div class="col border ml-1">
            <p class="text-muted font-italic">
                Glisser / déposer ici le matériel nécessaire…
            </p>
            {{ form_widget(form.equipments) }}
        </div>
    </div>

    <div class="row mt-3">
        <div class="col">
            <h5 class="mt-1">
                Ressources pédagogiques
            </h5>
            {{ form_errors(form.educationalResources) }}
            {{ form_widget(form.educationalResources) }}
        </div>
    </div>

    <div class="row mt-3">
        <div class="col">
            <h5 class="mt-1">
                Eléments bibliographiques
            </h5>
            {{ form_errors(form.bibliographicResources) }}
            {{ form_widget(form.bibliographicResources) }}
        </div>
    </div>

    <div class="row mt-3">
        <div class="col">
            <button class="btn btn-outline-primary btn-block shadow submit" type="submit">
                <i class="fas fa-save"></i>
                Enregistrer
            </button>
        </div>
    </div>

    {{ form_end(form) }}

{% endblock %}

{% block javascripts %}
    <script>

        function setEquipmentInfos(el, data){
            el.find('.equipment-label').html(data['label']);
            el.find('select[id$=_equipment]').val(data['equipment_id']);
            el.addClass(data['classtype']);
        }


        /**
         * Init equipments collection
         */
        var equipmentsClassList = $('.list-equipments');
        var equipmentsCollectionHolder = $('#equipments');
        equipmentsCollectionHolder.data('index', equipmentsCollectionHolder.find('.equipment').length);

        // Equipments collection holder sortable
        equipmentsCollectionHolder.sortable( {
            group: {
                name: "equipments"
            },
            handle: ".equipment-collection-move",
            sort: true,
            animation: 150,
            onAdd: function(e){
                var item = $(e.item);
                var form = Syllabus.addFormToCollection(equipmentsCollectionHolder);
                var label = item.find('input.equipment-label').val();
                var equipment_id = item.find("input.equipment-id").val();
                var classtype = item.find("input.equipment-class").val();
                setEquipmentInfos(form, {
                    'label': label,
                    'equipment_id': equipment_id,
                    'classtype': classtype
                });
                item.replaceWith(form);
            }
        } );

        // Equipments lists sortable
        equipmentsClassList.sortable( {
            group: {
                name: "equipments",
                pull: 'clone',
                put: false
            },
            sort: false,
            animation: 150
        } );

        /**
         * Remove an equipment from collection
         */
        equipmentsCollectionHolder.on('click', '.equipment-collection-remove', function(){
            Syllabus.temporaryItem = $(this).closest('div.equipment');
            bootbox.confirm("Confirmez-vous le retrait de ce matériel de la liste ?", function(result){
                if (result === true) {
                    Syllabus.removeListElement(Syllabus.temporaryItem);
                }
            })
        });

        /**
         * Form submission
         */
        $("form[name='edit_equipments_course_info']").submit(function(e){
            Syllabus.submitPanelForm( e, this );
        });

    </script>
{% endblock %}