{% extends 'ajax.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .fa-caret-down {
            transform: scale(1.2);
            margin-top: -4px;
        }
        .fa-caret-down[aria-expanded='false'] {
            transform: scale(1.2) rotate(-90deg);
        }
    </style>
{% endblock %}

{% block main %}

    {% form_theme form with [
    'form/sections_field.html.twig',
    'form/activities_field.html.twig',
    'form/choices_activities_field.html.twig'
    ] %}

    {{ form_start(form) }}
    <button type="button" id="addSectionButton"
            class="btn btn-primary btn-block btn-sm">
        <i class="fas fa-plus-circle"></i>
        Ajouter une section
    </button>

    {{ form_widget(form.sections) }}

    <div class="row mt-3">
        <div class="col">
            <button class="btn btn-outline-primary btn-block submit" type="submit">
                <i class="fas fa-save"></i>
                Enregistrer
            </button>
        </div>
    </div>

    {{ form_end(form) }}

{% endblock %}

{% block javascripts %}

    <script>

        /**
         * Init activities elements
         */
        function initActivities(container){
                var activitiesClassList = container.find('.list-activities');
                var activitiesCollectionHolder = container.find('.activities');
                var groupName = activitiesCollectionHolder.attr('id');

                // Set data-index
                activitiesCollectionHolder.data('index', activitiesCollectionHolder.find('.activity').length);

                // Activities collection holder sortable
                activitiesCollectionHolder.sortable( {
                    group: {
                        name: groupName
                    },
                    handle: ".activity-collection-move",
                    sort: true,
                    animation: 150,
                    onAdd: function(e){
                        var item = $(e.item);
                        var form = addFormToCollection(activitiesCollectionHolder);
                        var label = item.find('input.activity-label').val();
                        var id = item.find("input.list-id").val();
                        var type = item.find("input.list-type").val();
                        var mode = item.find("input.list-mode").val();
                        var size = item.find("input.list-size").val();
                        var evaluation = item.find("input.list-evaluation").val();
                        form.find('.activity-label').html(label);
                        form.find('select[id$=_activity]').val(id);
                        form.addClass('border-'+item.find("input.activity-color").val());
                        item.replaceWith(form);
                    }
                } );

                // Activities lists sortable
                activitiesClassList.sortable( {
                    group: {
                        name: groupName,
                        pull: 'clone',
                        put: false
                    },
                    sort: false,
                    animation: 150
                } );

                // Remove a activity from collection
                activitiesCollectionHolder.on('click', '.activity-collection-remove', function(){
                    var form = $(this).closest(".activity");
                    form.fadeOut({
                        always: function(){
                            form.remove();
                        }
                    });
                });
        }

        /**
         *
         */
        $(document).ready(function(){
            /**
             * Init sections collection
             */
            var sectionsCollectionHolder = $('#sections');
            sectionsCollectionHolder.data('index', sectionsCollectionHolder.find('li.section').length);
            sectionsCollectionHolder.sortable( {
                group: {
                    name: "sections",
                },
                handle: ".section-collection-move",
                sort: true,
                animation: 150
            } );

            /**
             * Add a section when button click
             */
            $('#addSectionButton').click(function(){
                var form = addFormToCollection(sectionsCollectionHolder);
                initActivities(form.find('.container-activities'));
                form.find('input[id$=_title]').focus();
            });

            /**
             * Remove a section from collection
             */
            sectionsCollectionHolder.on('click', '.section-collection-remove', function(){
                var form = $(this).closest("li.section");
                form.fadeOut({
                    always: function(){
                        form.remove();
                    }
                });
            });

            /**
             * Call initActivities function for all activities container
             */
            $('.container-activities').each(function(){
                initActivities($(this));
            });

            /**
             * Submit the form
             */
            $("form[name='edit_activities_course_info']").submit(function(e){
                e.preventDefault();

                for ( instance in CKEDITOR.instances ) {
                    CKEDITOR.instances[instance].updateElement();
                }

                var form = $(this);
                //var data = new FormData(form);

                sectionsCollectionHolder.find('li.section').each(function(order){
                    // Set section order
                    $(this).find("input[id$='_order']").each(function(){
                        if($(this).attr("id").match(/^edit_activities_course_info_sections_[\d]+_order/)){
                            $(this).val(order+1);
                        }
                    });
                    console.log($(this).find(".activity"));
                    // Set activities order
                    $(this).find(".activity").each(function(order){
                        $(this).find("input[id$='_order']").val(order+1);
                    });
                });


                SILTools.spinner.fadeIn( {
                    always: function(){
                    $.ajax({
                        type: 'POST',
                        //enctype: 'multipart/form-data',
                        //processData: false,  // Important!
                        //contentType: false,
                        url: '{{ path('save_activities_course_info', { 'id': courseInfo.id })|escape('js') }}',
                        data: form.serialize(),
                        //cache: false,
                        //timeout: 600000
                    }).done(function(response){
                        if(response.type !== undefined && response.message !== undefined) {
                            SILTools.alert(response.type, response.message, false);
                        }
                    }).always(function(){
                        SILTools.spinner.fadeOut( );
                    });
                    }
                });
            });

        });

    </script>
{% endblock %}