{% extends 'ajax.html.twig' %}

{% block main %}



    {% form_theme form with [
    'form/achievements_field.html.twig',
    'form/prerequisites_field.html.twig',
    'form/tutoring_resources_field.html.twig'
    ] %}

    {{ form_start(form) }}

    <div class="d-flex flex-row justify-content-between">
        <div>
            <h3>
                Objectifs du cours
            </h3>
        </div>
        <div>
            <button class="btn btn-outline-primary submit" type="submit">
                <i class="fas fa-save"></i>
                Enregistrer
            </button>
        </div>
    </div>

    {{ form_errors(form) }}
    <div class="row mt-3 mb-5">
        <div class="col">
            <div class="row">
                <div class="col">
                    {#
                    <h4>Comment rédiger un acquis d'apprentissage ?</h4>


                    <h5>Verbe + objet (contenu) + contexte</h5>
                    <div class="alert alert-info" role="alert">
                        <h6>Exemples en Sciences Humaine et Sociale :</h6>
                        <ul>
                            <li>
                                produire des documents d'aide à la décision à partir de l'analyse d'une situation économique,
                            </li>
                            <li>
                                présenter les résultats d'une étude de marché donnée aux différentes étapes sur la base d'une recherche documentaire.
                            </li>
                        </ul>
                    </div>
                    <div class="alert alert-info" role="alert">
                        <h6>Exemples en Sciences :</h6>
                        <ul>
                            <li>
                                développer des applications simples en langage orienté objet,
                            </li>
                            <li>
                                utiliser des formules menant à l'interprétation des résultats dans une problématique de machine à données manquantes.
                            </li>
                        </ul>
                    </div>
                    #}

                </div>
            </div>
        </div>
    </div>

    <hr>

    <h5>
        Capacités visées / acquis d'apprentissage
        <img id="infos_acquis" src="{{ asset('images/info_32.png') }}" style="cursor: pointer;">
    </h5>
    <a href="https://lms.univ-cotedazur.fr/course/view.php?id=22948"
       class="btn btn-outline-info btn-sm btn-block"
       target="_blank">
        Cours dédié à l'« Approche par Compétences » (auto inscription)
    </a>
    <div class="border border-primary rounded p-4 my-3 mx-1">
        <h6>À la fin de ce cours, l'étudiant devrait être capable de…</h6>
        {{ form_errors(form.courseAchievements) }}
        {{ form_widget(form.courseAchievements) }}
        <button type="button" class="btn btn-primary btn-block" id="addAchievementButton">
            <i class="fas fa-plus-circle"></i>
            Ajouter un acquis d'apprentissage
        </button>
    </div>

    <hr>

    <h5>Prérequis</h5>
    <div class="border border-primary rounded p-4 my-3 mx-1">
        <h6>Avant le début du cours, l'étudiant doit…</h6>
        {{ form_widget(form.coursePrerequisites) }}
        <button type="button" class="btn btn-primary btn-block" id="addPrerequisiteButton">
            <i class="fas fa-plus-circle"></i>
            Ajouter un prérequis
        </button>
    </div>

    <hr>

    <h5>Remédiation / aide à la réussite</h5>
    <div class="border border-primary rounded p-4 my-3 mx-1">
        <h6>Si l'étudiant rencontre des difficultés, il peut…</h6>
        <div class="d-flex flex-row mb-3">
            <span>Assister à des séances de tutorat :</span>
            <div class="col-md-auto" data-toggle="collapse" href="#collapseTutoring" role="button" aria-expanded="{{ (form.vars.data.tutoring == 1) ? 'true' : 'false'}}" aria-controls="collapseTutoring">
                {{ form_widget(form.tutoring) }}
            </div>
        </div>
        <div class="collapse {{ (form.vars.data.tutoring == 1) ? 'show' : '' }}" id="collapseTutoring" >
            {{ form_widget(form.tutoringTeacher) }}
            {{ form_widget(form.tutoringStudent) }}

            {{ form_widget(form.tutoringDescription) }}
            <label placeholder="Infos pratiques (facultatif)"></label>
        </div>
        {{ form_widget(form.courseTutoringResources) }}

        <button type="button" class="btn btn-primary btn-block" id="addTutoringResourceButton">
            <i class="fas fa-plus-circle"></i>
            Ajouter une remédiation
        </button>
    </div>

    <div class="row mt-3">
        <div class="col">
            <button class="btn btn-outline-primary btn-block shadow submit" type="submit">
                <i class="fas fa-save"></i>
                Enregistrer
            </button>
        </div>
    </div>

    {{ form_end(form) }}

{% endblock %}

{% block javascripts %}
    <script>

        $('#edit_objectives_course_info_tutoring').bootstrapToggle({
            on: 'Oui',
            off: 'Non',
            onstyle: 'primary',
            offstyle: 'secondary',
            size: 'sm',
            style: 'ios'
        });

        /**
         * Init achievements collection
         */
        var achievementsCollectionHolder = $('#achievements');
        achievementsCollectionHolder.data('index', achievementsCollectionHolder.find('li.achievement').length);
        achievementsCollectionHolder.sortable({
            group: {
                name: "achievements",
            },
            handle: ".achievement-collection-move",
            sort: true,
            animation: 150
        });

        /**
         * Add a achievement when button click
         */
        $('#addAchievementButton').click(function () {

            var form = Syllabus.addFormToCollection(achievementsCollectionHolder);
            form.find('input[id$=_description]').focus();
        });

        /**
         * Remove a achievement from collection
         */
        achievementsCollectionHolder.on('click', '.achievement-collection-remove', function () {
            Syllabus.temporaryItem = $(this).closest('li.achievement');
            bootbox.confirm("Confirmez-vous la suppression de cet acquis d'apprentissage ?", function(result){
                if (result === true) {
                    Syllabus.removeListElement(Syllabus.temporaryItem);
                }
            })
        });


        /**
         * Init prerequisites collection
         */
        var prerequisitesCollectionHolder = $('#prerequisites');
        prerequisitesCollectionHolder.data('index', prerequisitesCollectionHolder.find('li.prerequisite').length);
        prerequisitesCollectionHolder.sortable({
            group: {
                name: "prerequisites"
            },
            handle: ".prerequisite-collection-move",
            sort: true,
            animation: 150
        });

        /**
         * Add a prerequisite when button click
         */
        $('#addPrerequisiteButton').click(function () {
            var form = Syllabus.addFormToCollection(prerequisitesCollectionHolder);
            form.find('input[id$=_description]').focus();
        });

        /**
         * Remove a prerequisite from collection
         */
        prerequisitesCollectionHolder.on('click', '.prerequisite-collection-remove', function () {
            Syllabus.temporaryItem = $(this).closest('li.prerequisite');
            bootbox.confirm("Confirmez-vous la suppression de ce prérequis ?", function(result){
                if (result === true) {
                    Syllabus.removeListElement(Syllabus.temporaryItem);
                }
            })
        });

        /**
         * Init tutoringResources collection
         */
        var tutoringResourcesCollectionHolder = $('#tutoringResources');
        tutoringResourcesCollectionHolder.data('index', tutoringResourcesCollectionHolder.find('li.tutoringResource').length);
        tutoringResourcesCollectionHolder.sortable({
            group: {
                name: "tutoringResources"
            },
            handle: ".tutoringResource-collection-move",
            sort: true,
            animation: 150
        });

        /**
         * Add a tutoringResource when button click
         */
        $('#addTutoringResourceButton').click(function () {
            var form = Syllabus.addFormToCollection(tutoringResourcesCollectionHolder);
            form.find('input[id$=_description]').focus();
        });

        /**
         * Remove a tutoringResource from collection
         */
        tutoringResourcesCollectionHolder.on('click', '.tutoringResource-collection-remove', function () {
            Syllabus.temporaryItem = $(this).closest('li.tutoringResource');
            bootbox.confirm("Confirmez-vous la suppression de cette remédiation ?", function(result){
                if (result === true) {
                    Syllabus.removeListElement(Syllabus.temporaryItem);
                }
            })
        });

        /**
         * Form submission
         */
        $("form[name='edit_objectives_course_info']").submit(function(e){
            Syllabus.submitPanelForm( e, this );
        });

        $('#infos_acquis').click(function(){
            var message = '<img src="{{ asset('images/objectives.png') }}" class="w-100">';
            bootbox.dialog({
                message: message,
                backdrop: true,
                onEscape: true,
                size: 'large'
            });
        });

    </script>
{% endblock %}